{"body":"Tiny Redis\r\n==========\r\nTiny Redis is a Redis driver for the D programming language (v2). It is intentionally minimal, but powerful and makes working with Redis trivial.\r\n\r\n## Support\r\nAll the basic operations on all data types are supported :\r\n- strings\r\n- hashes\r\n- lists\r\n- sets\r\n- sorted sets\r\n- transactions\r\n- pipelining (New!)\r\n\r\nThe more esoteric features like Lua scripting and Pub/Sub have not been tested yet.\r\n\r\n## Compilation Instructions\r\n\r\nrdmd src/example.d tinyredis/*\r\n\r\nIf you have *make* installed, run :\r\n\r\n\tmake example\r\n\t\r\nTo run any of the example programs, or unittests, make sure you have a Redis server running on \"localhost\" on port 6379 (default Redis install)\r\n\r\n## Example\r\n\timport tinyredis.redis; \r\n\r\n\tauto redis = new Redis(\"localhost\", 6379);\r\n    \r\n    //An Int reply\r\n    writeln(redis.send(\"LASTSAVE\"));\r\n    \r\n    //Get/Set\r\n    redis.send(\"SET name adil\");\r\n    auto r = redis.send(\"GET name\");\r\n    writeln(\"My name is \", r.value); //My name is adil\r\n   \r\n    //Or create a set\r\n    redis.send(\"SADD\", \"myset\", \"adil\");\r\n    redis.send(\"SADD\", \"myset\", 350001939);\r\n    redis.send(\"SADD\", \"myset\", 1.2);\r\n    redis.send(\"SADD\", \"myset\", true);\r\n    redis.send(\"SADD\", \"myset\", true);\r\n    writeln(redis.send(\"SMEMBERS myset\"));\r\n    // Writes : [\"adil\", \"350001939\", \"1.2\", \"true\"]\r\n    \r\n    //Transactions\r\n     writeln(redis.send(\"MULTI\")); //OK\r\n     writeln(redis.send(\"INCR foo\")); //QUEUED\r\n     writeln(redis.send(\"INCR bar\")); //QUEUED\r\n     writeln(redis.send(\"EXEC\")); //[(Integer) 1, (Integer) 1] \r\n     \r\n     //Pipeling\r\n     Response[] responses = redis.pipeline([\"SET ctr 1\", \"INCR ctr\", \"INCR ctr\", \"INCR ctr\", \"INCR ctr\"]);\r\n     writeln(responses); //[OK, (Integer) 2, (Integer) 3, (Integer) 4, (Integer) 5]\r\n\r\nSee [example.d](https://github.com/adilbaig/Tiny-Redis/blob/master/src/example.d) and [console.d](https://github.com/adilbaig/Tiny-Redis/blob/master/src/console.d) for more usage samples. You may also want to check out the unittests in [tinyredis/*](https://github.com/adilbaig/Tiny-Redis/blob/master/tinyredis/) \r\n\r\n## Interactive Console\r\nThe integrated interactive console works like redis-cli. To run it, run :\r\n\r\n\tmake console\r\n\r\n## Run Unittests\r\n\r\n\tmake test\r\n\r\n## Dependencies\r\nThis library does not have any dependencies. Tested with dmd 2.059 on Linux, and dmd-trunk (2.06ish) on Linux 64bit.  \r\n\r\n## Feedback\r\nIf you're using this library please provide some feedback so i can improve it. And thanks! \r\n\r\n## Contributions\r\nOpen tickets for bugs. Request a pull for patches/improvements. Feel free to suggest code improvements, new features and anything else.\r\n\r\nAdil Baig\r\n<br />Blog : [adilbaig.posterous.com](http://adilbaig.posterous.com)\r\n<br />Twitter : [@aidezigns](http://twitter.com/aidezigns)\r\n","name":"Tiny-redis","tagline":"A simple but powerful Redis driver in D","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}